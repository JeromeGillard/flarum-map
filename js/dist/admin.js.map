{"version":3,"file":"admin.js","mappings":";;;;;;;;;;;;;;AAAA;AAEAA,wEAAA,CAAqB,0BAArB,EAAiD,YAAM;EACrDG,OAAO,CAACC,GAAR,CAAY,0CAAZ;EACAJ,4EAAA,CACO,YADP,EAEGM,eAFH,CAGI;IACEC,OAAO,EAAE,mBADX;IACgC;IAC9BC,KAAK,EAAER,wEAAA,CAAqB,sCAArB,CAFT;IAEuE;IACrEW,IAAI,EAAE,QAHR,CAGkB;;EAHlB,CAHJ,EAQI,EARJ,CAQO;EARP;AAUD,CAZD;;;;;;;;;;;;;;ACFA;AAEAX,yEAAA,CAAqB,0BAArB,EAAiD,YAAM;EACrDG,OAAO,CAACC,GAAR,CAAY,oDAAZ;AACD,CAFD;;;;;;;;;;;ACFA;;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;ACNA","sources":["webpack://@jeromegillard/flarum-osm/./src/admin/index.ts","webpack://@jeromegillard/flarum-osm/./src/common/index.ts","webpack://@jeromegillard/flarum-osm/external root \"flarum.core.compat['admin/app']\"","webpack://@jeromegillard/flarum-osm/external root \"flarum.core.compat['common/app']\"","webpack://@jeromegillard/flarum-osm/webpack/bootstrap","webpack://@jeromegillard/flarum-osm/webpack/runtime/compat get default export","webpack://@jeromegillard/flarum-osm/webpack/runtime/define property getters","webpack://@jeromegillard/flarum-osm/webpack/runtime/hasOwnProperty shorthand","webpack://@jeromegillard/flarum-osm/webpack/runtime/make namespace object","webpack://@jeromegillard/flarum-osm/./admin.ts"],"sourcesContent":["import app from 'flarum/admin/app';\n\napp.initializers.add('jeromegillard/flarum-osm', () => {\n  console.log('[jeromegillard/flarum-osm] Hello, admin!');\n  app.extensionData\n    .for('flarum-osm')\n    .registerSetting(\n      {\n        setting: 'flarum-osm.mapbox', // This is the key the settings will be saved under in the settings table in the database.\n        label: app.translator.trans('flarum-osm.admin.settings.mapbox.key'), // The label to be shown letting the admin know what the setting does.\n        type: 'string', // What type of setting this is, valid options are: boolean, text (or any other <input> tag type), and select. \n      },\n      30 // Optional: Priority\n    )\n});\n","import app from 'flarum/common/app';\n\napp.initializers.add('jeromegillard/flarum-osm', () => {\n  console.log('[jeromegillard/flarum-osm] Hello, forum and admin!');\n});\n","module.exports = flarum.core.compat['admin/app'];","module.exports = flarum.core.compat['common/app'];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","export * from './src/common';\nexport * from './src/admin';\n"],"names":["app","initializers","add","console","log","extensionData","registerSetting","setting","label","translator","trans","type"],"sourceRoot":""}